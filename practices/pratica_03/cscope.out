cscope 15 $HOME/UFC/disciplinas/QXD0149/lab/pratica_03               0000030324
	@inc/clock_module.h

1 #i‚de‡
__CLOCK_MODULE_H


2 
	#__CLOCK_MODULE_H


	)

25 
	e_CKM_MODULE_REG
{

27 
	mCKM_PER_L4LS_CLKSTCTRL
 = 0x000,

28 
	mCKM_PER_L3S_CLKSTCTRL
 = 0x004,

29 
	mCKM_PER_L4FW_CLKSTCTRL
 = 0x008,

30 
	mCKM_PER_L3_CLKSTCTRL
 = 0x00C,

31 
	mCKM_PER_CPGMAC0_CLKCTRL
 = 0x014,

32 
	mCKM_PER_LCDC_CLKCTRL
 = 0x018,

33 
	mCKM_PER_USB0_CLKCTRL
 = 0x01C,

34 
	mCKM_PER_TPTC0_CLKCTRL
 = 0x024,

35 
	mCKM_PER_EMIF_CLKCTRL
 = 0x028,

36 
	mCKM_PER_OCMCRAM_CLKCTRL
 = 0x02C,

37 
	mCKM_PER_GPMC_CLKCTRL
 = 0x030,

38 
	mCKM_PER_MCASP0_CLKCTRL
 = 0x034,

39 
	mCKM_PER_UART5_CLKCTRL
 = 0x038,

40 
	mCKM_PER_MMC0_CLKCTRL
 = 0x03C,

41 
	mCKM_PER_ELM_CLKCTRL
 = 0x040,

42 
	mCKM_PER_I2C2_CLKCTRL
 = 0x044,

43 
	mCKM_PER_I2C1_CLKCTRL
 = 0x048,

44 
	mCKM_PER_SPI0_CLKCTRL
 = 0x04C,

45 
	mCKM_PER_SPI1_CLKCTRL
 = 0x050,

46 
	mCKM_PER_L4LS_CLKCTRL
 = 0x060,

47 
	mCKM_PER_L4FW_CLKCTRL
 = 0x064,

48 
	mCKM_PER_MCASP1_CLKCTRL
 = 0x068,

49 
	mCKM_PER_UART1_CLKCTRL
 = 0x06C,

50 
	mCKM_PER_UART2_CLKCTRL
 = 0x070,

51 
	mCKM_PER_UART3_CLKCTRL
 = 0x074,

52 
	mCKM_PER_UART4_CLKCTRL
 = 0x078,

53 
	mCKM_PER_TIMER7_CLKCTRL
 = 0x07C,

54 
	mCKM_PER_TIMER2_CLKCTRL
 = 0x080,

55 
	mCKM_PER_TIMER3_CLKCTRL
 = 0x084,

56 
	mCKM_PER_TIMER4_CLKCTRL
 = 0x088,

57 
	mCKM_PER_GPIO1_CLKCTRL
 = 0x0AC,

58 
	mCKM_PER_GPIO2_CLKCTRL
 = 0x0B0,

59 
	mCKM_PER_GPIO3_CLKCTRL
 = 0x0B4,

60 
	mCKM_PER_TPCC_CLKCTRL
 = 0x0BC,

61 
	mCKM_PER_DCAN0_CLKCTRL
 = 0x0C0,

62 
	mCKM_PER_DCAN1_CLKCTRL
 = 0x0C4,

63 
	mCKM_PER_EPWMSS1_CLKCTRL
 = 0x0CC,

64 
	mCKM_PER_EMIF_FW_CLKCTRL
 = 0x0D0,

65 
	mCKM_PER_EPWMSS0_CLKCTRL
 = 0x0D4,

66 
	mCKM_PER_EPWMSS2_CLKCTRL
 = 0x0D8,

67 
	mCKM_PER_L3_INSTR_CLKCTRL
 = 0x0DC,

68 
	mCKM_PER_L3_CLKCTRL
 = 0x0E0,

69 
	mCKM_PER_IEEE5000_CLKCTRL
 = 0x0E4,

70 
	mCKM_PER_PRU_ICSS_CLKCTRL
 = 0x0E8,

71 
	mCKM_PER_TIMER5_CLKCTRL
 = 0x0EC,

72 
	mCKM_PER_TIMER6_CLKCTRL
 = 0x0F0,

73 
	mCKM_PER_MMC1_CLKCTRL
 = 0x0F4,

74 
	mCKM_PER_MMC2_CLKCTRL
 = 0x0F8,

75 
	mCKM_PER_TPTC1_CLKCTRL
 = 0x0FC,

76 
	mCKM_PER_TPTC2_CLKCTRL
 = 0x100,

77 
	mCKM_PER_SPINLOCK_CLKCTRL
 = 0x10C,

78 
	mCKM_PER_MAILBOX0_CLKCTRL
 = 0x110,

79 
	mCKM_PER_L4HS_CLKSTCTRL
 = 0x11C,

80 
	mCKM_PER_L4HS_CLKCTRL
 = 0x120,

81 
	mCKM_PER_OCPWP_L3_CLKSTCTRL
 = 0x12C,

82 
	mCKM_PER_OCPWP_CLKCTRL
 = 0x130,

83 
	mCKM_PER_PRU_ICSS_CLKSTCTRL
 = 0x140,

84 
	mCKM_PER_CPSW_CLKSTCTRL
 = 0x144,

85 
	mCKM_PER_LCDC_CLKSTCTRL
 = 0x148,

86 
	mCKM_PER_CLKDIV32K_CLKCTRL
 = 0x14C,

87 
	mCKM_PER_CLK_24MHZ_CLKSTCTRL
 = 0x150,

89 
	mCKM_WKUP_CLKSTCTRL
 = 0x00,

90 
	mCKM_WKUP_CONTROL_CLKCTRL
 = 0x04,

91 
	mCKM_WKUP_GPIO0_CLKCTRL
 = 0x08,

92 
	mCKM_WKUP_L4WKUP_CLKCTRL
 = 0x0C,

93 
	mCKM_WKUP_TIMER0_CLKCTRL
 = 0x10,

94 
	mCKM_WKUP_DEBUGSS_CLKCTRL
 = 0x14,

95 
	mCKM_L3_AON_CLKSTCTRL
 = 0x18,

96 
	mCKM_AUTOIDLE_DPLL_MPU
 = 0x1C,

97 
	mCKM_IDLEST_DPLL_MPU
 = 0x20,

98 
	mCKM_SSC_DELTAMSTEP_DPLL_MPU
 = 0x24,

99 
	mCKM_SSC_MODFREQDIV_DPLL_MPU
 = 0x28,

100 
	mCKM_CLKSEL_DPLL_MPU
 = 0x2C,

101 
	mCKM_AUTOIDLE_DPLL_DDR
 = 0x30,

102 
	mCKM_IDLEST_DPLL_DDR
 = 0x34,

103 
	mCKM_SSC_DELTAMSTEP_DPLL_DDR
 = 0x38,

104 
	mCKM_SSC_MODFREQDIV_DPLL_DDR
 = 0x3C,

105 
	mCKM_CLKSEL_DPLL_DDR
 = 0x40,

106 
	mCKM_AUTOIDLE_DPLL_DISP
 = 0x44,

107 
	mCKM_IDLEST_DPLL_DISP
 = 0x48,

108 
	mCKM_SSC_DELTAMSTEP_DPLL_DISP
 = 0x4C,

109 
	mCKM_SSC_MODFREQDIV_DPLL_DISP
 = 0x50,

110 
	mCKM_CLKSEL_DPLL_DISP
 = 0x54,

111 
	mCKM_AUTOIDLE_DPLL_CORE
 = 0x58,

112 
	mCKM_IDLEST_DPLL_CORE
 = 0x5C,

113 
	mCKM_SSC_DELTAMSTEP_DPLL_CORE
 = 0x60,

114 
	mCKM_SSC_MODFREQDIV_DPLL_CORE
 = 0x64,

115 
	mCKM_CLKSEL_DPLL_CORE
 = 0x68,

116 
	mCKM_AUTOIDLE_DPLL_PER
 = 0x6C,

117 
	mCKM_IDLEST_DPLL_PER
 = 0x70,

118 
	mCKM_SSC_DELTAMSTEP_DPLL_PER
 = 0x74,

119 
	mCKM_SSC_MODFREQDIV_DPLL_PER
 = 0x78,

120 
	mCKM_CLKDCOLDO_DPLL_PER
 = 0x7C,

121 
	mCKM_DIV_M4_DPLL_CORE
 = 0x80,

122 
	mCKM_DIV_M5_DPLL_CORE
 = 0x84,

123 
	mCKM_CLKMODE_DPLL_MPU
 = 0x88,

124 
	mCKM_CLKMODE_DPLL_PER
 = 0x8C,

125 
	mCKM_CLKMODE_DPLL_CORE
 = 0x90,

126 
	mCKM_CLKMODE_DPLL_DDR
 = 0x94,

127 
	mCKM_CLKMODE_DPLL_DISP
 = 0x98,

128 
	mCKM_CLKSEL_DPLL_PERIPH
 = 0x9C,

129 
	mCKM_DIV_M2_DPLL_DDR
 = 0xA0,

130 
	mCKM_DIV_M2_DPLL_DISP
 = 0xA4,

131 
	mCKM_DIV_M2_DPLL_MPU
 = 0xA8,

132 
	mCKM_DIV_M2_DPLL_PER
 = 0xAC,

133 
	mCKM_WKUP_WKUP_M3_CLKCTRL
 = 0xB0,

134 
	mCKM_WKUP_UART0_CLKCTRL
 = 0xB4,

135 
	mCKM_WKUP_I2C0_CLKCTRL
 = 0xB8,

136 
	mCKM_WKUP_ADC_TSC_CLKCTRL
 = 0xBC,

137 
	mCKM_WKUP_SMARTREFLEX0_CLKCTRL
 = 0xC0,

138 
	mCKM_WKUP_TIMER1_CLKCTRL
 = 0xC4,

139 
	mCKM_WKUP_SMARTREFLEX1_CLKCTRL
 = 0xC8,

140 
	mCKM_L4_WKUP_AON_CLKSTCTRL
 = 0xCC,

141 
	mCKM_WKUP_WDT1_CLKCTRL
 = 0xD4,

142 
	mCKM_DIV_M6_DPLL_CORE
 = 0xD8

143 }
	tCKM_MODULE_REG
;

146 
	#CONTROL_CONF_GPMC_MMODE
 (0x00000007u)

	)

147 
	#CONTROL_CONF_GPMC_MMODE_SHIFT
 (0x00000000u)

	)

149 
	#CONTROL_CONF_GPMC_PUDEN
 (0x00000008u)

	)

150 
	#CONTROL_CONF_GPMC_PUDEN_SHIFT
 (0x00000003u)

	)

152 
	#CONTROL_CONF_GPMC_PUTYPESEL
 (0x00000010u)

	)

153 
	#CONTROL_CONF_GPMC_PUTYPESEL_SHIFT
 (0x00000004u)

	)

155 
	#CONTROL_CONF_GPMC_RSVD
 (0x000FFF80u)

	)

156 
	#CONTROL_CONF_GPMC_RSVD_SHIFT
 (0x00000007u)

	)

158 
	#CONTROL_CONF_GPMC_RXACTIVE
 (0x00000020u)

	)

159 
	#CONTROL_CONF_GPMC_RXACTIVE_SHIFT
 (0x00000005u)

	)

161 
	#CONTROL_CONF_GPMC_SLEWCTRL
 (0x00000040u)

	)

162 
	#CONTROL_CONF_GPMC_SLEWCTRL_SHIFT
 (0x00000006u)

	)

169 
ckmSëCLKModuÀRegi°î
(
CKM_MODULE_REG
 
moduÀ
, 
vÆue
);

170 
ckmGëCLKModuÀRegi°î
(
CKM_MODULE_REG
 
moduÀ
);

	@inc/control_module.h

1 #i‚de‡
__CONTROL_MODULE_H


2 
	#__CONTROL_MODULE_H


	)

25 
	mCM_c⁄åﬁ_ªvisi⁄
 = 0x0000,

26 
	mCM_c⁄åﬁ_hwöfo
 = 0x0004,

27 
	mCM_c⁄åﬁ_sysc⁄fig
 = 0x0010,

28 
	mCM_c⁄åﬁ_°©us
 = 0x0040,

29 
	mCM_c⁄åﬁ_emif_sdøm_c⁄fig
 = 0x0110,

30 
	mCM_c‹ãx_vbbldo_˘æ
 = 0x041C,

31 
	mCM_c‹e_¶do_˘æ
 = 0x0428,

32 
	mCM_mpu_¶do_˘æ
 = 0x042C,

33 
	mCM_˛k32kdivøtio_˘æ
 = 0x0444,

34 
	mCM_b™dg≠_˘æ
 = 0x0448,

35 
	mCM_b™dg≠_åim
 = 0x044C,

36 
	mCM_∂l_˛köpulow_˘æ
 = 0x0458,

37 
	mCM_mosc_˘æ
 = 0x0468,

38 
	mCM_dìp¶ìp_˘æ
 = 0x0470,

39 
	mCM_d∂l_pwr_sw_°©us
 = 0x050C,

40 
	mCM_devi˚_id
 = 0x0600,

41 
	mCM_dev_„©uª
 = 0x0604,

42 
	mCM_öô_¥i‹ôy_0
 = 0x0608,

43 
	mCM_öô_¥i‹ôy_1
 = 0x060C,

44 
	mCM_mmu_cfg
 = 0x0610,

45 
	mCM_çtc_cfg
 = 0x0614,

46 
	mCM_usb_˘æ0
 = 0x0620,

47 
	mCM_usb_°s0
 = 0x0624,

48 
	mCM_usb_˘æ1
 = 0x0628,

49 
	mCM_usb_°s1
 = 0x062C,

50 
	mCM_mac_id0_lo
 = 0x0630,

51 
	mCM_mac_id0_hi
 = 0x0634,

52 
	mCM_mac_id1_lo
 = 0x0638,

53 
	mCM_mac_id1_hi
 = 0x063C,

54 
	mCM_dˇn_ømöô
 = 0x0644,

55 
	mCM_usb_wkup_˘æ
 = 0x0648,

56 
	mCM_gmii_£l
 = 0x0650,

57 
	mCM_pwmss_˘æ
 = 0x0664,

58 
	mCM_mªq¥io_0
 = 0x0670,

59 
	mCM_mªq¥io_1
 = 0x0674,

60 
	mCM_hw_evít_£l_gΩ1
 = 0x0690,

61 
	mCM_hw_evít_£l_gΩ2
 = 0x0694,

62 
	mCM_hw_evít_£l_gΩ3
 = 0x0698,

63 
	mCM_hw_evít_£l_gΩ4
 = 0x069C,

64 
	mCM_smπ_˘æ
 = 0x06A0,

65 
	mCM_mpuss_hw_debug_£l
 = 0x06A4,

66 
	mCM_mpuss_hw_dbg_öfo
 = 0x06A8,

67 
	mCM_vdd_mpu_›p_050
 = 0x0770,

68 
	mCM_vdd_mpu_›p_100
 = 0x0774,

69 
	mCM_vdd_mpu_›p_120
 = 0x0778,

70 
	mCM_vdd_mpu_›p_turbo
 = 0x077C,

71 
	mCM_vdd_c‹e_›p_050
 = 0x07B8,

72 
	mCM_vdd_c‹e_›p_100
 = 0x07BC,

73 
	mCM_bb_sˇÀ
 = 0x07D0,

74 
	mCM_usb_vid_pid
 = 0x07F4,

75 
	mCM_efu£_sma
 = 0x07FC,

76 
	mCM_c⁄f_gpmc_ad0
 = 0x0800,

77 
	mCM_c⁄f_gpmc_ad1
 = 0x0804,

78 
	mCM_c⁄f_gpmc_ad2
 = 0x0808,

79 
	mCM_c⁄f_gpmc_ad3
 = 0x080C,

80 
	mCM_c⁄f_gpmc_ad4
 = 0x0810,

81 
	mCM_c⁄f_gpmc_ad5
 = 0x0814,

82 
	mCM_c⁄f_gpmc_ad6
 = 0x0818,

83 
	mCM_c⁄f_gpmc_ad7
 = 0x081C,

84 
	mCM_c⁄f_gpmc_ad8
 = 0x0820,

85 
	mCM_c⁄f_gpmc_ad9
 = 0x0824,

86 
	mCM_c⁄f_gpmc_ad10
 = 0x0828,

87 
	mCM_c⁄f_gpmc_ad11
 = 0x082C,

88 
	mCM_c⁄f_gpmc_ad12
 = 0x0830,

89 
	mCM_c⁄f_gpmc_ad13
 = 0x0834,

90 
	mCM_c⁄f_gpmc_ad14
 = 0x0838,

91 
	mCM_c⁄f_gpmc_ad15
 = 0x083C,

92 
	mCM_c⁄f_gpmc_a0
 = 0x0840,

93 
	mCM_c⁄f_gpmc_a1
 = 0x0844,

94 
	mCM_c⁄f_gpmc_a2
 = 0x0848,

95 
	mCM_c⁄f_gpmc_a3
 = 0x084C,

96 
	mCM_c⁄f_gpmc_a4
 = 0x0850,

97 
	mCM_c⁄f_gpmc_a5
 = 0x0854,

98 
	mCM_c⁄f_gpmc_a6
 = 0x0858,

99 
	mCM_c⁄f_gpmc_a7
 = 0x085C,

100 
	mCM_c⁄f_gpmc_a8
 = 0x0860,

101 
	mCM_c⁄f_gpmc_a9
 = 0x0864,

102 
	mCM_c⁄f_gpmc_a10
 = 0x0868,

103 
	mCM_c⁄f_gpmc_a11
 = 0x086C,

104 
	mCM_c⁄f_gpmc_waô0
 = 0x0870,

105 
	mCM_c⁄f_gpmc_w≤
 = 0x0874,

106 
	mCM_c⁄f_gpmc_bí1
 = 0x0878,

107 
	mCM_c⁄f_gpmc_c¢0
 = 0x087C,

108 
	mCM_c⁄f_gpmc_c¢1
 = 0x0880,

109 
	mCM_c⁄f_gpmc_c¢2
 = 0x0884,

110 
	mCM_c⁄f_gpmc_c¢3
 = 0x0888,

111 
	mCM_c⁄f_gpmc_˛k
 = 0x088C,

112 
	mCM_c⁄f_gpmc_advn_Æe
 = 0x0890,

113 
	mCM_c⁄f_gpmc_€n_ªn
 = 0x0894,

114 
	mCM_c⁄f_gpmc_wí
 = 0x0898,

115 
	mCM_c⁄f_gpmc_bí0_˛e
 = 0x089C,

116 
	mCM_c⁄f_lcd_d©a0
 = 0x08A0,

117 
	mCM_c⁄f_lcd_d©a1
 = 0x08A4,

118 
	mCM_c⁄f_lcd_d©a2
 = 0x08A8,

119 
	mCM_c⁄f_lcd_d©a3
 = 0x08AC,

120 
	mCM_c⁄f_lcd_d©a4
 = 0x08B0,

121 
	mCM_c⁄f_lcd_d©a5
 = 0x08B4,

122 
	mCM_c⁄f_lcd_d©a6
 = 0x08B8,

123 
	mCM_c⁄f_lcd_d©a7
 = 0x08BC,

124 
	mCM_c⁄f_lcd_d©a8
 = 0x08C0,

125 
	mCM_c⁄f_lcd_d©a9
 = 0x08C4,

126 
	mCM_c⁄f_lcd_d©a10
 = 0x08C8,

127 
	mCM_c⁄f_lcd_d©a11
 = 0x08CC,

128 
	mCM_c⁄f_lcd_d©a12
 = 0x08D0,

129 
	mCM_c⁄f_lcd_d©a13
 = 0x08D4,

130 
	mCM_c⁄f_lcd_d©a14
 = 0x08D8,

131 
	mCM_c⁄f_lcd_d©a15
 = 0x08DC,

132 
	mCM_c⁄f_lcd_vsync
 = 0x08E0,

133 
	mCM_c⁄f_lcd_hsync
 = 0x08E4,

134 
	mCM_c⁄f_lcd_p˛k
 = 0x08E8,

135 
	mCM_c⁄f_lcd_ac_büs_í
 = 0x08EC,

136 
	mCM_c⁄f_mmc0_d©3
 = 0x08F0,

137 
	mCM_c⁄f_mmc0_d©2
 = 0x08F4,

138 
	mCM_c⁄f_mmc0_d©1
 = 0x08F8,

139 
	mCM_c⁄f_mmc0_d©0
 = 0x08FC,

140 
	mCM_c⁄f_mmc0_˛k
 = 0x0900,

141 
	mCM_c⁄f_mmc0_cmd
 = 0x0904,

142 
	mCM_c⁄f_mii1_cﬁ
 = 0x0908,

143 
	mCM_c⁄f_mii1_¸s
 = 0x090C,

144 
	mCM_c⁄f_mii1_rx_î
 = 0x0910,

145 
	mCM_c⁄f_mii1_tx_í
 = 0x0914,

146 
	mCM_c⁄f_mii1_rx_dv
 = 0x0918,

147 
	mCM_c⁄f_mii1_txd3
 = 0x091C,

148 
	mCM_c⁄f_mii1_txd2
 = 0x0920,

149 
	mCM_c⁄f_mii1_txd1
 = 0x0924,

150 
	mCM_c⁄f_mii1_txd0
 = 0x0928,

151 
	mCM_c⁄f_mii1_tx_˛k
 = 0x092C,

152 
	mCM_c⁄f_mii1_rx_˛k
 = 0x0930,

153 
	mCM_c⁄f_mii1_rxd3
 = 0x0934,

154 
	mCM_c⁄f_mii1_rxd2
 = 0x0938,

155 
	mCM_c⁄f_mii1_rxd1
 = 0x093C,

156 
	mCM_c⁄f_mii1_rxd0
 = 0x0940,

157 
	mCM_c⁄f_rmii1_ªf_˛k
 = 0x0944,

158 
	mCM_c⁄f_mdio
 = 0x0948,

159 
	mCM_c⁄f_mdc
 = 0x094C,

160 
	mCM_c⁄f_•i0_s˛k
 = 0x0950,

161 
	mCM_c⁄f_•i0_d0
 = 0x0954,

162 
	mCM_c⁄f_•i0_d1
 = 0x0958,

163 
	mCM_c⁄f_•i0_cs0
 = 0x095C,

164 
	mCM_c⁄f_•i0_cs1
 = 0x0960,

165 
	mCM_c⁄f_eˇp0_ö_pwm0_out
 = 0x0964,

166 
	mCM_c⁄f_u¨t0_˘¢
 = 0x0968,

167 
	mCM_c⁄f_u¨t0_π¢
 = 0x096C,

168 
	mCM_c⁄f_u¨t0_rxd
 = 0x0970,

169 
	mCM_c⁄f_u¨t0_txd
 = 0x0974,

170 
	mCM_c⁄f_u¨t1_˘¢
 = 0x0978,

171 
	mCM_c⁄f_u¨t1_π¢
 = 0x097C,

172 
	mCM_c⁄f_u¨t1_rxd
 = 0x0980,

173 
	mCM_c⁄f_u¨t1_txd
 = 0x0984,

174 
	mCM_c⁄f_i2c0_sda
 = 0x0988,

175 
	mCM_c⁄f_i2c0_s˛
 = 0x098C,

176 
	mCM_c⁄f_mˇ•0_a˛kx
 = 0x0990,

177 
	mCM_c⁄f_mˇ•0_fsx
 = 0x0994,

178 
	mCM_c⁄f_mˇ•0_axr0
 = 0x0998,

179 
	mCM_c⁄f_mˇ•0_ah˛kr
 = 0x099C,

180 
	mCM_c⁄f_mˇ•0_a˛kr
 = 0x09A0,

181 
	mCM_c⁄f_mˇ•0_f§
 = 0x09A4,

182 
	mCM_c⁄f_mˇ•0_axr1
 = 0x09A8,

183 
	mCM_c⁄f_mˇ•0_ah˛kx
 = 0x09AC,

184 
	mCM_c⁄f_xdma_evít_öå0
 = 0x09B0,

185 
	mCM_c⁄f_xdma_evít_öå1
 = 0x09B4,

186 
	mCM_c⁄f_w¨mr°n
 = 0x09B8,

187 
	mCM_c⁄f_¬mi
 = 0x09C0,

188 
	mCM_c⁄f_tms
 = 0x09D0,

189 
	mCM_c⁄f_tdi
 = 0x09D4,

190 
	mCM_c⁄f_tdo
 = 0x09D8,

191 
	mCM_c⁄f_tck
 = 0x09DC,

192 
	mCM_c⁄f_å°n
 = 0x09E0,

193 
	mCM_c⁄f_emu0
 = 0x09E4,

194 
	mCM_c⁄f_emu1
 = 0x09E8,

195 
	mCM_c⁄f_πc_pwr⁄r°n
 = 0x09F8,

196 
	mCM_c⁄f_pmic_powî_í
 = 0x09FC,

197 
	mCM_c⁄f_ext_wakeup
 = 0x0A00,

198 
	mCM_c⁄f_πc_kÆdo_ín
 = 0x0A04,

199 
	mCM_c⁄f_usb0_drvvbus
 = 0x0A1C,

200 
	mCM_c⁄f_usb1_drvvbus
 = 0x0A34,

201 
	mCM_cqdëe˘_°©us
 = 0x0E00,

202 
	mCM_ddr_io_˘æ
 = 0x0E04,

203 
	mCM_vç_˘æ
 = 0x0E0C,

204 
	mCM_vªf_˘æ
 = 0x0E14,

205 
	mCM_çcc_evt_mux_0_3
 = 0x0F90,

206 
	mCM_çcc_evt_mux_4_7
 = 0x0F94,

207 
	mCM_çcc_evt_mux_8_11
 = 0x0F98,

208 
	mCM_çcc_evt_mux_12_15
 = 0x0F9C,

209 
	mCM_çcc_evt_mux_16_19
 = 0x0FA0,

210 
	mCM_çcc_evt_mux_20_23
 = 0x0FA4,

211 
	mCM_çcc_evt_mux_24_27
 = 0x0FA8,

212 
	mCM_çcc_evt_mux_28_31
 = 0x0FAC,

213 
	mCM_çcc_evt_mux_32_35
 = 0x0FB0,

214 
	mCM_çcc_evt_mux_36_39
 = 0x0FB4,

215 
	mCM_çcc_evt_mux_40_43
 = 0x0FB8,

216 
	mCM_çcc_evt_mux_44_47
 = 0x0FBC,

217 
	mCM_çcc_evt_mux_48_51
 = 0x0FC0,

218 
	mCM_çcc_evt_mux_52_55
 = 0x0FC4,

219 
	mCM_çcc_evt_mux_56_59
 = 0x0FC8,

220 
	mCM_çcc_evt_mux_60_63
 = 0x0FCC,

221 
	mCM_timî_evt_ˇ±
 = 0x0FD0,

222 
	mCM_eˇp_evt_ˇ±
 = 0x0FD4,

223 
	mCM_adc_evt_ˇ±
 = 0x0FD8,

224 
	mCM_ª£t_iso
 = 0x1000,

225 
	mCM_d∂l_pwr_sw_˘æ
 = 0x1318,

226 
	mCM_ddr_cke_˘æ
 = 0x131C,

227 
	mCM_sma2
 = 0x1320,

228 
	mCM_m3_txev_eoi
 = 0x1324,

229 
	mCM_ùc_msg_ªg0
 = 0x1328,

230 
	mCM_ùc_msg_ªg1
 = 0x132C,

231 
	mCM_ùc_msg_ªg2
 = 0x1330,

232 
	mCM_ùc_msg_ªg3
 = 0x1334,

233 
	mCM_ùc_msg_ªg4
 = 0x1338,

234 
	mCM_ùc_msg_ªg5
 = 0x133C,

235 
	mCM_ùc_msg_ªg6
 = 0x1340,

236 
	mCM_ùc_msg_ªg7
 = 0x1344,

237 
	mCM_ddr_cmd0_io˘æ
 = 0x1404,

238 
	mCM_ddr_cmd1_io˘æ
 = 0x1408,

239 
	mCM_ddr_cmd2_io˘æ
 = 0x140C,

240 
	mCM_ddr_d©a0_io˘æ
 = 0x1440,

241 
	mCM_ddr_d©a1_io˘æ
 = 0x1444

242 }
	tCONTROL_MODULE
;

247 
cmSëCålModuÀ
(
CONTROL_MODULE
 
moduÀ
, 
vÆue
);

248 
cmGëCålModuÀ
(
CONTROL_MODULE
 
moduÀ
);

	@inc/gpio.h

1 #i‚de‡
GPIO_H_


2 
	#GPIO_H_


	)

22 
	~"˛ock_moduÀ.h
"

23 
	~"c⁄åﬁ_moduÀ.h
"

24 
	~"∑d.h
"

25 
	~"soc_AM335x.h
"

26 
	~"hw_ty≥s.h
"

28 
	#GPIO_REVISION
 0x000

	)

29 
	#GPIO_SYSCONFIG
 0x010

	)

30 
	#GPIO_EOI
 0x020

	)

31 
	#GPIO_IRQSTATUS_RAW_0
 0x024

	)

32 
	#GPIO_IRQSTATUS_RAW_1
 0x028

	)

33 
	#GPIO_IRQSTATUS_0
 0x02C

	)

34 
	#GPIO_IRQSTATUS_1
 0x030

	)

35 
	#GPIO_IRQSTATUS_SET_0
 0x034

	)

36 
	#GPIO_IRQSTATUS_SET_1
 0x038

	)

37 
	#GPIO_IRQSTATUS_CLR_0
 0x03C

	)

38 
	#GPIO_IRQSTATUS_CLR_1
 0x040

	)

39 
	#GPIO_IRQWAKEN_0
 0x044

	)

40 
	#GPIO_IRQWAKEN_1
 0x048

	)

41 
	#GPIO_SYSSTATUS
 0x114

	)

42 
	#GPIO_CTRL
 0x130

	)

43 
	#GPIO_OE
 0x134

	)

44 
	#GPIO_DATAIN
 0x138

	)

45 
	#GPIO_DATAOUT
 0x13C

	)

46 
	#GPIO_LEVELDETECT0
 0x140

	)

47 
	#GPIO_LEVELDETECT1
 0x144

	)

48 
	#GPIO_RISINGDETECT
 0x148

	)

49 
	#GPIO_FALLINGDETECT
 0x14C

	)

50 
	#GPIO_DEBOUNCENABLE
 0x150

	)

51 
	#GPIO_DEBOUNCINGTIME
 0x154

	)

52 
	#GPIO_CLEARDATAOUT
 0x190

	)

53 
	#GPIO_SETDATAOUT
 0x194

	)

60 
	tucPöNumbî
;

65 
	e_pöLevñ
{

66 
	mLOW
,

67 
	mHIGH


68 }
	tpöLevñ
;

70 
	e_gpioP‹t
{

71 
	mGPIO0
,

72 
	mGPIO1
,

73 
	mGPIO2
,

74 
	mGPIO3


75 }
	tgpioP‹t
;

77 
	e_pöDúe˘i⁄
{

78 
	mOUTPUT
,

79 
	mINPUT


80 }
	tpöDúe˘i⁄
;

87 
gpioInôModuÀ
(
gpioP‹t
 );

88 
gpioPöMuxSëup
(
gpioP‹t
 ,
ucPöNumbî
, 
pöDúe˘i⁄
 );

89 
gpioSëDúe˘i⁄
(
gpioP‹t
 ,
ucPöNumbî
 ,
pöDúe˘i⁄
 );

90 
gpioGëDúe˘i⁄
(
ucPöNumbî
 ,ucPinNumber );

91 
gpioSëPöVÆue
(
gpioP‹t
 ,
ucPöNumbî
 ,
pöLevñ
 );

92 
gpioGëPöVÆue
(
gpioP‹t
 ,
ucPöNumbî
 );

	@inc/hw_types.h

42 #i‚de‡
_HW_TYPES_H_


43 
	#_HW_TYPES_H_


	)

50 
	ttBoﬁón
;

53 
	måue
 = 1,

54 
	mÁl£
 = 0

55 }
	tboﬁ
;

57 #i‚de‡
NULL


58 
	#NULL
 ((*Ë0)

	)

66 
	#HWREG
(
x
) \

67 (*((vﬁ©ûê*)(
x
)))

	)

68 
	#HWREGH
(
x
) \

69 (*((vﬁ©ûê*)(
x
)))

	)

70 
	#HWREGB
(
x
) \

71 (*((vﬁ©ûê*)(
x
)))

	)

72 
	#HWREGBITW
(
x
, 
b
) \

73 
	`HWREG
((()(
x
) & 0xF0000000) | 0x02000000 | \

74 ((()(
x
Ë& 0x000FFFFFË<< 5Ë| ((
b
Ë<< 2))

	)

75 
	#HWREGBITH
(
x
, 
b
) \

76 
	`HWREGH
((()(
x
) & 0xF0000000) | 0x02000000 | \

77 ((()(
x
Ë& 0x000FFFFFË<< 5Ë| ((
b
Ë<< 2))

	)

78 
	#HWREGBITB
(
x
, 
b
) \

79 
	`HWREGB
((()(
x
) & 0xF0000000) | 0x02000000 | \

80 ((()(
x
Ë& 0x000FFFFFË<< 5Ë| ((
b
Ë<< 2))

	)

82 
	#TRUE
 1

	)

83 
	#FALSE
 0

	)

	@inc/pad.h

1 #i‚de‡
__PAD_H


2 
	#__PAD_H


	)

23 
	~"c⁄åﬁ_moduÀ.h
"

29 
	mMODE_0
 = 0,

30 
	mMODE_1
 = 1,

31 
	mMODE_2
 = 2,

32 
	mMODE_3
 = 3,

33 
	mMODE_4
 = 4,

34 
	mMODE_5
 = 5,

35 
	mMODE_6
 = 6,

36 
	mMODE_7
 = 7

38 }
	tpömode_t
;

43 
∑dSëMode
(
CONTROL_MODULE
 
moduÀ
, 
pömode_t
 
mode
);

44 
pömode_t
 
∑dGëMode
(
CONTROL_MODULE
 
moduÀ
);

	@inc/soc_AM335x.h

44 #i‚de‡
_SOC_AM33XX_H_


45 
	#_SOC_AM33XX_H_


	)

47 #ifde‡
__˝lu•lus


52 
	#SOC_CACHELINE_SIZE_MAX
 (64)

	)

55 
	#SOC_AINTC_REGS
 (0x48200000)

	)

58 
	#SOC_UART_0_REGS
 (0x44E09000)

	)

59 
	#SOC_UART_1_REGS
 (0x48022000)

	)

60 
	#SOC_UART_2_REGS
 (0x48024000)

	)

61 
	#SOC_UART_3_REGS
 (0x481A6000)

	)

62 
	#SOC_UART_4_REGS
 (0x481A8000)

	)

63 
	#SOC_UART_5_REGS
 (0x481AA000)

	)

66 
	#SOC_USB_0_BASE
 (0x47401400)

	)

67 
	#SOC_USB_1_BASE
 (0x47401C00)

	)

69 
	#SOC_SPI_0_REGS
 (0x48030000)

	)

70 
	#SOC_SPI_1_REGS
 (0x481A0000)

	)

73 
	#SOC_GPIO_0_REGS
 (0x44E07000)

	)

74 
	#SOC_GPIO_1_REGS
 (0x4804C000)

	)

75 
	#SOC_GPIO_2_REGS
 (0x481AC000)

	)

76 
	#SOC_GPIO_3_REGS
 (0x481AE000)

	)

79 
	#SOC_DMTIMER_0_REGS
 (0x44E05000)

	)

80 
	#SOC_DMTIMER_1_REGS
 (0x44E31000)

	)

81 
	#SOC_DMTIMER_2_REGS
 (0x48040000)

	)

82 
	#SOC_DMTIMER_3_REGS
 (0x48042000)

	)

83 
	#SOC_DMTIMER_4_REGS
 (0x48044000)

	)

84 
	#SOC_DMTIMER_5_REGS
 (0x48046000)

	)

85 
	#SOC_DMTIMER_6_REGS
 (0x48048000)

	)

86 
	#SOC_DMTIMER_7_REGS
 (0x4804A000)

	)

89 
	#SOC_MMCHS_0_REGS
 (0x48060000)

	)

90 
	#SOC_MMCHS_1_REGS
 (0x481D8000)

	)

91 
	#SOC_MMCHS_2_REGS
 (0x47810000)

	)

94 
	#SOC_GPMC_0_REGS
 (0x50000000)

	)

97 
	#SOC_ELM_0_REGS
 (0x48080000)

	)

100 
	#SOC_I2C_0_REGS
 (0x44E0B000)

	)

101 
	#SOC_I2C_1_REGS
 (0x4802A000)

	)

102 
	#SOC_I2C_2_REGS
 (0x4819C000)

	)

105 
	#SOC_WDT_0_REGS
 (0x44E33000)

	)

106 
	#SOC_WDT_1_REGS
 (0x44E35000)

	)

109 
	#SOC_CPSW_SS_REGS
 (0x4A100000)

	)

110 
	#SOC_CPSW_MDIO_REGS
 (0x4A101000)

	)

111 
	#SOC_CPSW_WR_REGS
 (0x4A101200)

	)

112 
	#SOC_CPSW_CPDMA_REGS
 (0x4A100800)

	)

113 
	#SOC_CPSW_ALE_REGS
 (0x4A100D00)

	)

114 
	#SOC_CPSW_STAT_REGS
 (0x4A100900)

	)

115 
	#SOC_CPSW_PORT_0_REGS
 (0x4A100100)

	)

116 
	#SOC_CPSW_PORT_1_REGS
 (0x4A100200)

	)

117 
	#SOC_CPSW_SLIVER_1_REGS
 (0x4A100D80)

	)

118 
	#SOC_CPSW_PORT_2_REGS
 (0x4A100300)

	)

119 
	#SOC_CPSW_SLIVER_2_REGS
 (0x4A100DC0)

	)

120 
	#SOC_CPSW_CPPI_RAM_REGS
 (0x4A102000)

	)

123 
	#SOC_MCASP_0_CTRL_REGS
 (0x48038000)

	)

124 
	#SOC_MCASP_0_FIFO_REGS
 (
SOC_MCASP_0_CTRL_REGS
 + 0x1000)

	)

125 
	#SOC_MCASP_0_DATA_REGS
 (0x46000000)

	)

126 
	#SOC_MCASP_1_CTRL_REGS
 (0x4803C000)

	)

127 
	#SOC_MCASP_1_FIFO_REGS
 (
SOC_MCASP_1_CTRL_REGS
 + 0x1000)

	)

128 
	#SOC_MCASP_1_DATA_REGS
 (0x46400000)

	)

131 
	#SOC_EMIF_0_REGS
 (0x4C000000)

	)

134 
	#SOC_RTC_0_REGS
 (0x44E3E000)

	)

137 
	#SOC_PRCM_REGS
 (0x44E00000)

	)

138 
	#SOC_CM_PER_REGS
 (
SOC_PRCM_REGS
 + 0)

	)

139 
	#SOC_CM_WKUP_REGS
 (
SOC_PRCM_REGS
 + 0x400)

	)

140 
	#SOC_CM_DPLL_REGS
 (
SOC_PRCM_REGS
 + 0x500)

	)

141 
	#SOC_CM_MPU_REGS
 (
SOC_PRCM_REGS
 + 0x600)

	)

142 
	#SOC_CM_DEVICE_REGS
 (
SOC_PRCM_REGS
 + 0x700)

	)

143 
	#SOC_CM_RTC_REGS
 (
SOC_PRCM_REGS
 + 0x800)

	)

144 
	#SOC_CM_GFX_REGS
 (
SOC_PRCM_REGS
 + 0x900)

	)

145 
	#SOC_CM_CEFUSE_REGS
 (
SOC_PRCM_REGS
 + 0xA00)

	)

146 
	#SOC_OCP_SOCKET_RAM_REGS
 (
SOC_PRCM_REGS
 + 0xB00)

	)

147 
	#SOC_PRM_PER_REGS
 (
SOC_PRCM_REGS
 + 0xC00)

	)

148 
	#SOC_PRM_WKUP_REGS
 (
SOC_PRCM_REGS
 + 0xD00)

	)

149 
	#SOC_PRM_MPU_REGS
 (
SOC_PRCM_REGS
 + 0xE00)

	)

150 
	#SOC_PRM_DEVICE_REGS
 (
SOC_PRCM_REGS
 + 0xF00)

	)

151 
	#SOC_PRM_RTC_REGS
 (
SOC_PRCM_REGS
 + 0x1000)

	)

152 
	#SOC_PRM_GFX_REGS
 (
SOC_PRCM_REGS
 + 0x1100)

	)

153 
	#SOC_PRM_CEFUSE_REGS
 (
SOC_PRCM_REGS
 + 0x1200)

	)

156 
	#SOC_CONTROL_REGS
 (0x44E10000)

	)

160 
	#SOC_EDMA30CC_0_REGS
 (0x49000000)

	)

163 
	#SOC_DCAN_0_REGS
 (0x481CC000)

	)

164 
	#SOC_DCAN_1_REGS
 (0x481D0000)

	)

170 
	#TPCC_MUX
(
n
Ë0xF90 + (“Ë* 4)

	)

173 
	#SOC_LCDC_0_REGS
 0x4830E000

	)

175 
	#SOC_ADC_TSC_0_REGS
 0x44E0D000

	)

179 
	#SOC_PWMSS0_REGS
 (0x48300000)

	)

180 
	#SOC_PWMSS1_REGS
 (0x48302000)

	)

181 
	#SOC_PWMSS2_REGS
 (0x48304000)

	)

183 
	#SOC_ECAP_REGS
 (0x00000100)

	)

184 
	#SOC_EQEP_REGS
 (0x00000180)

	)

185 
	#SOC_EPWM_REGS
 (0x00000200)

	)

187 
	#SOC_ECAP_0_REGS
 (
SOC_PWMSS0_REGS
 + 
SOC_ECAP_REGS
)

	)

188 
	#SOC_ECAP_1_REGS
 (
SOC_PWMSS1_REGS
 + 
SOC_ECAP_REGS
)

	)

189 
	#SOC_ECAP_2_REGS
 (
SOC_PWMSS2_REGS
 + 
SOC_ECAP_REGS
)

	)

191 
	#SOC_EQEP_0_REGS
 (
SOC_PWMSS0_REGS
 + 
SOC_EQEP_REGS
)

	)

192 
	#SOC_EQEP_1_REGS
 (
SOC_PWMSS1_REGS
 + 
SOC_EQEP_REGS
)

	)

193 
	#SOC_EQEP_2_REGS
 (
SOC_PWMSS2_REGS
 + 
SOC_EQEP_REGS
)

	)

195 
	#SOC_EPWM_0_REGS
 (
SOC_PWMSS0_REGS
 + 
SOC_EPWM_REGS
)

	)

196 
	#SOC_EPWM_1_REGS
 (
SOC_PWMSS1_REGS
 + 
SOC_EPWM_REGS
)

	)

197 
	#SOC_EPWM_2_REGS
 (
SOC_PWMSS2_REGS
 + 
SOC_EPWM_REGS
)

	)

200 
	#SOC_EPWM_MODULE_FREQ
 100

	)

202 #ifde‡
__˝lu•lus


	@src/clock_module.c

19 
	~"˛ock_moduÀ.h
"

20 
	~"hw_ty≥s.h
"

21 
	~"soc_AM335x.h
"

24 
boﬁ
 
	$ckmCheckVÆidModuÀ
(
CKM_MODULE_REG
 
moduÀ
){

25 if((
moduÀ
 > 
CKM_PER_CLK_24MHZ_CLKSTCTRL
)){

26 (
Ál£
);

28 (
åue
);

29 
	}
}

31 
	$ckmSëCLKModuÀRegi°î
(
CKM_MODULE_REG
 
moduÀ
, 
vÆue
){

32 if(
	`ckmCheckVÆidModuÀ
(
moduÀ
)){

33 
addr_ãmp
 = 
SOC_CM_PER_REGS
 + 
moduÀ
;

34 
	`HWREG
(
addr_ãmp
Ë|
vÆue
;

36 
	}
}

38 
	$ckmGëCLKModuÀRegi°î
(
CKM_MODULE_REG
 
moduÀ
){

39 if(
	`ckmCheckVÆidModuÀ
(
moduÀ
)){

40 
addr_ãmp
 = 
SOC_CM_PER_REGS
 + 
moduÀ
;

41 (
	`HWREG
(
addr_ãmp
));

44 
	}
}

	@src/control_module.c

19 
	~"c⁄åﬁ_moduÀ.h
"

20 
	~"soc_AM335x.h
"

21 
	~"hw_ty≥s.h
"

23 
	$cmSëCålModuÀ
(
CONTROL_MODULE
 
moduÀ
, 
vÆue
){

24 
	`HWREG
(
SOC_CONTROL_REGS
 + 
moduÀ
Ë|
vÆue
;

25 
	}
}

27 
	$cmGëCålModuÀ
(
CONTROL_MODULE
 
moduÀ
){

28 (
	`HWREG
(
SOC_CONTROL_REGS
 + 
moduÀ
));

29 
	}
}

	@src/gpio.c

19 
	~"gpio.h
"

26 c⁄° 
CONTROL_MODULE
 
	gGPIO_CTRL_MODULE_ARRAY
[32][4] = {

28 {
CM_c⁄f_mdio
 ,
CM_c⁄f_gpmc_ad0
 ,
CM_c⁄f_gpmc_c¢3
 ,
CM_c⁄f_mii1_cﬁ
 },

29 {
CM_c⁄f_mdc
 ,
CM_c⁄f_gpmc_ad1
 ,
CM_c⁄f_gpmc_˛k
 ,
CM_c⁄f_mii1_¸s
 },

30 {
CM_c⁄f_•i0_s˛k
 ,
CM_c⁄f_gpmc_ad2
 ,
CM_c⁄f_gpmc_advn_Æe
 ,
CM_c⁄f_mii1_rx_î
 },

31 {
CM_c⁄f_•i0_d0
 ,
CM_c⁄f_gpmc_ad3
 ,
CM_c⁄f_gpmc_€n_ªn
 ,
CM_c⁄f_mii1_tx_í
 },

32 {
CM_c⁄f_•i0_d1
 ,
CM_c⁄f_gpmc_ad4
 ,
CM_c⁄f_gpmc_wí
 ,
CM_c⁄f_mii1_rx_dv
 },

33 {
CM_c⁄f_•i0_cs0
 ,
CM_c⁄f_gpmc_ad5
 ,
CM_c⁄f_gpmc_bí0_˛e
 ,
CM_c⁄f_i2c0_sda
 },

34 {
CM_c⁄f_•i0_cs1
 ,
CM_c⁄f_gpmc_ad6
 ,
CM_c⁄f_lcd_d©a0
 ,
CM_c⁄f_i2c0_s˛
 },

35 {
CM_c⁄f_eˇp0_ö_pwm0_out
 ,
CM_c⁄f_gpmc_ad7
 ,
CM_c⁄f_lcd_d©a1
 ,
CM_c⁄f_emu0
 },

36 {
CM_c⁄f_lcd_d©a12
 ,
CM_c⁄f_u¨t0_˘¢
 ,
CM_c⁄f_lcd_d©a2
 ,
CM_c⁄f_emu1
 },

37 {
CM_c⁄f_lcd_d©a13
 ,
CM_c⁄f_u¨t0_π¢
 ,
CM_c⁄f_lcd_d©a3
 ,
CM_c⁄f_mii1_tx_˛k
 },

38 {
CM_c⁄f_lcd_d©a14
 ,
CM_c⁄f_u¨t0_rxd
 ,
CM_c⁄f_lcd_d©a4
 ,
CM_c⁄f_mii1_rx_˛k
 },

39 {
CM_c⁄f_lcd_d©a15
 ,
CM_c⁄f_u¨t0_txd
 ,
CM_c⁄f_lcd_d©a5
 ,-1 },

40 {
CM_c⁄f_u¨t1_˘¢
 ,
CM_c⁄f_gpmc_ad12
 ,
CM_c⁄f_lcd_d©a6
 ,-1 },

41 {
CM_c⁄f_u¨t1_π¢
 ,
CM_c⁄f_gpmc_ad13
 ,
CM_c⁄f_lcd_d©a7
 ,
CM_c⁄f_usb1_drvvbus
 },

42 {
CM_c⁄f_u¨t1_rxd
 ,
CM_c⁄f_gpmc_ad14
 ,
CM_c⁄f_lcd_d©a8
 ,
CM_c⁄f_mˇ•0_a˛kx
 },

43 {
CM_c⁄f_u¨t1_txd
 ,
CM_c⁄f_gpmc_ad15
 ,
CM_c⁄f_lcd_d©a9
 ,
CM_c⁄f_mˇ•0_fsx
 },

44 {
CM_c⁄f_mii1_txd3
 ,
CM_c⁄f_gpmc_a0
 ,
CM_c⁄f_lcd_d©a10
 ,
CM_c⁄f_mˇ•0_axr0
 },

45 {
CM_c⁄f_mii1_txd2
 ,
CM_c⁄f_gpmc_a1
 ,
CM_c⁄f_lcd_d©a11
 ,
CM_c⁄f_mˇ•0_ah˛kr
 },

46 {
CM_c⁄f_usb0_drvvbus
 ,
CM_c⁄f_gpmc_a2
 ,
CM_c⁄f_mii1_rxd3
 ,
CM_c⁄f_mˇ•0_a˛kr
 },

47 {
CM_c⁄f_xdma_evít_öå0
 ,
CM_c⁄f_gpmc_a3
 ,
CM_c⁄f_mii1_rxd2
 ,
CM_c⁄f_mˇ•0_f§
 },

48 {
CM_c⁄f_xdma_evít_öå1
 ,
CM_c⁄f_gpmc_a4
 ,
CM_c⁄f_mii1_rxd1
 ,
CM_c⁄f_mˇ•0_axr1
 },

49 {
CM_c⁄f_mii1_txd1
 ,
CM_c⁄f_gpmc_a5
 ,
CM_c⁄f_mii1_rxd0
 ,
CM_c⁄f_mˇ•0_ah˛kx
 },

50 {
CM_c⁄f_gpmc_ad8
 ,
CM_c⁄f_gpmc_a6
 ,
CM_c⁄f_lcd_vsync
 ,-1 },

51 {
CM_c⁄f_gpmc_ad9
 ,
CM_c⁄f_gpmc_a7
 ,
CM_c⁄f_lcd_hsync
 ,-1 },

52 {-1 ,
CM_c⁄f_gpmc_a8
 ,
CM_c⁄f_lcd_p˛k
 ,-1 },

53 {-1 ,
CM_c⁄f_gpmc_a9
 ,
CM_c⁄f_lcd_ac_büs_í
 ,-1 },

54 {
CM_c⁄f_gpmc_ad10
 ,
CM_c⁄f_gpmc_a10
 ,
CM_c⁄f_mmc0_d©3
 ,-1 },

55 {
CM_c⁄f_gpmc_ad11
 ,
CM_c⁄f_gpmc_a11
 ,
CM_c⁄f_mmc0_d©2
 ,-1 },

56 {
CM_c⁄f_mii1_txd0
 ,
CM_c⁄f_gpmc_bí1
 ,
CM_c⁄f_mmc0_d©1
 ,-1 },

57 {
CM_c⁄f_rmii1_ªf_˛k
 ,
CM_c⁄f_gpmc_c¢0
 ,
CM_c⁄f_mmc0_d©0
 ,-1 },

58 {
CM_c⁄f_gpmc_waô0
 ,
CM_c⁄f_gpmc_c¢1
 ,
CM_c⁄f_mmc0_˛k
 ,-1 },

59 {
CM_c⁄f_gpmc_w≤
 ,
CM_c⁄f_gpmc_c¢2
 ,
CM_c⁄f_mmc0_cmd
 ,-1 },

68 
boﬁ
 
	$gpioCheckVÆidP‹tPö
(
gpioP‹t
 
p‹t
, 
ucPöNumbî
 
pö
){

69 if((
p‹t
 < 
GPIO0
Ë|| (p‹à> 
GPIO3
)){

71 (
Ál£
);

73 if((
pö
 < 0) || (pin > 31)){

75 (
Ál£
);

77 (
åue
);

78 
	}
}

86 
boﬁ
 
	$gpioCheckVÆidDúe˘i⁄
(
pöDúe˘i⁄
 
dú
){

87 if((
dú
!=
INPUT
Ë&& (dú!=
OUTPUT
)){

89 (
Ál£
);

91 (
åue
);

92 
	}
}

100 
	$gpioInôModuÀ
(
gpioP‹t
 
p‹t
){

101 if(
	`gpioCheckVÆidP‹tPö
(
p‹t
, 0)){

102 
£âög
 = (1<<18) | (0x2<<0);

103 
p‹t
){

104 
GPIO0
:

107 
GPIO1
:

108 
	`ckmSëCLKModuÀRegi°î
(
CKM_PER_GPIO1_CLKCTRL
, 
£âög
);

109 (
	`ckmGëCLKModuÀRegi°î
(
CKM_PER_GPIO1_CLKCTRL
) & (0x3<<16)) != 0)

111 
GPIO2
:

112 
	`ckmSëCLKModuÀRegi°î
(
CKM_PER_GPIO2_CLKCTRL
, 
£âög
);

113 (
	`ckmGëCLKModuÀRegi°î
(
CKM_PER_GPIO2_CLKCTRL
) & (0x3<<16)) != 0)

115 
GPIO3
:

122 
	}
}

130 
	$gpioPöMuxSëup
(
gpioP‹t
 
p‹t
, 
ucPöNumbî
 
pö
, 
pöDúe˘i⁄
 
dú
){

131 if(
	`gpioCheckVÆidP‹tPö
(
p‹t
, 
pö
)){

133 
CONTROL_MODULE
 
moduÀ
 = 
GPIO_CTRL_MODULE_ARRAY
[
pö
][
p‹t
];

134 
	`∑dSëMode
(
moduÀ
, 
MODE_7
);

136 if(
dú
 =
INPUT
){

137 
ãmp
 = 
	`cmGëCålModuÀ
(
moduÀ
);

138 
ãmp
 |
CONTROL_CONF_GPMC_SLEWCTRL
 |

139 
CONTROL_CONF_GPMC_RXACTIVE
 |

140 (
CONTROL_CONF_GPMC_PUDEN
 & (~CONTROL_CONF_GPMC_PUDEN)) |

141 (
CONTROL_CONF_GPMC_PUTYPESEL
 & (~CONTROL_CONF_GPMC_PUTYPESEL));

142 
	`cmSëCålModuÀ
(
moduÀ
, 
ãmp
);

146 
	}
}

154 
	$gpioSëDúe˘i⁄
(
gpioP‹t
 
p‹t
, 
ucPöNumbî
 
pö
, 
pöDúe˘i⁄
 
dú
){

155 
addr_ãmp
, 
vÆ_ãmp
;

157 if(
	`gpioCheckVÆidP‹tPö
(
p‹t
,
pö
)){

158 if(
	`gpioCheckVÆidDúe˘i⁄
(
dú
)){

159 
p‹t
) {

160 
GPIO0
:

162 
GPIO1
:

164 
addr_ãmp
 = 
SOC_GPIO_1_REGS
 + 
GPIO_OE
;

166 
vÆ_ãmp
 = 
	`HWREG
(
addr_ãmp
);

168 
GPIO2
:

170 
addr_ãmp
 = 
SOC_GPIO_2_REGS
 + 
GPIO_OE
;

172 
vÆ_ãmp
 = 
	`HWREG
(
addr_ãmp
);

174 
GPIO3
:

180 
vÆ_ãmp
 &~(1<<
pö
);

181 
vÆ_ãmp
 |(
dú
<<
pö
);

184 
	`HWREG
(
addr_ãmp
Ë
vÆ_ãmp
;

187 
	}
}

195 
	$gpioGëDúe˘i⁄
(
gpioP‹t
 
p‹t
, 
ucPöNumbî
 
pö
){

196 
addr_ãmp
, 
vÆ_ãmp
;

198 if(
	`gpioCheckVÆidP‹tPö
(
p‹t
,
pö
)){

199 
p‹t
) {

200 
GPIO0
:

202 
addr_ãmp
 = 
SOC_GPIO_0_REGS
 + 
GPIO_OE
;

203 
vÆ_ãmp
 = 
	`HWREG
(
addr_ãmp
);

205 
GPIO1
:

207 
addr_ãmp
 = 
SOC_GPIO_1_REGS
 + 
GPIO_OE
;

208 
vÆ_ãmp
 = 
	`HWREG
(
addr_ãmp
);

210 
GPIO2
:

213 
GPIO3
:

222 if(
vÆ_ãmp
 & (1<<
pö
)){

223 (
INPUT
);

225 (
OUTPUT
);

230 
	}
}

238 
	$gpioSëPöVÆue
(
gpioP‹t
 
p‹t
, 
ucPöNumbî
 
pö
, 
pöLevñ
 
vÆue
){

239 
addr_ãmp
, 
vÆ_ãmp
;

241 if(
vÆue
 =
HIGH
){

242 if(
	`gpioCheckVÆidP‹tPö
(
p‹t
,
pö
)){

243 
p‹t
) {

244 
GPIO0
:

246 
GPIO1
:

248 
addr_ãmp
 = 
SOC_GPIO_1_REGS
 + 
GPIO_SETDATAOUT
;

249 
vÆ_ãmp
 = 1<<
pö
;

251 
GPIO2
:

253 
addr_ãmp
 = 
SOC_GPIO_2_REGS
 + 
GPIO_SETDATAOUT
;

254 
vÆ_ãmp
 = 1<<
pö
;

256 
GPIO3
:

261 
	`HWREG
(
addr_ãmp
Ë|
vÆ_ãmp
;

264 if(
	`gpioCheckVÆidP‹tPö
(
p‹t
,
pö
)){

265 
p‹t
) {

266 
GPIO0
:

268 
GPIO1
:

270 
addr_ãmp
 = 
SOC_GPIO_1_REGS
 + 
GPIO_CLEARDATAOUT
;

271 
vÆ_ãmp
 = 1<<
pö
;

273 
GPIO2
:

275 
addr_ãmp
 = 
SOC_GPIO_2_REGS
 + 
GPIO_CLEARDATAOUT
;

276 
vÆ_ãmp
 = 1<<
pö
;

278 
GPIO3
:

283 
	`HWREG
(
addr_ãmp
Ë&
vÆ_ãmp
;

286 
	}
}

294 
	$gpioGëPöVÆue
(
gpioP‹t
 
p‹t
, 
ucPöNumbî
 
pö
){

295 
addr_ãmp
, 
vÆ_ãmp
;

297 if(
	`gpioCheckVÆidP‹tPö
(
p‹t
,
pö
)){

298 
p‹t
) {

299 
GPIO0
:

301 
GPIO1
:

302 
addr_ãmp
 = 
SOC_GPIO_1_REGS
 + 
GPIO_DATAIN
;

303 
vÆ_ãmp
 = 
	`HWREG
(
addr_ãmp
);

305 
GPIO2
:

307 
GPIO3
:

313 if(
vÆ_ãmp
 & (1<<
pö
)){

314 (
HIGH
);

316 (
LOW
);

322 
	}
}

	@src/main.c

19 
	~"gpio.h
"

25 
	#TIME
 2000000

	)

28 
	e_°©e
{

29 
	mSEQ1
=1,

30 
	mSEQ2
,

31 
	mSEQ3
,

32 
	mSEQ4
,

33 
	mSEQ5


34 }
	t°©e
;

39 
dñay
();

40 
ÀdON
(
gpioP‹t
 ,
ucPöNumbî
 );

41 
ÀdOFF
(
gpioP‹t
 ,
ucPöNumbî
 );

49 
	$maö
(){

50 
›
=
SEQ1
, 
cou¡
;

51 
ucPöNumbî
 
pö
=21;

56 
	`gpioInôModuÀ
(
GPIO1
);

61 
cou¡
=
pö
; count<25; count++)

62 
	`gpioPöMuxSëup
(
GPIO1
, 
cou¡
, 
OUTPUT
);

64 
	`gpioPöMuxSëup
(
GPIO1
, 28, 
INPUT
);

69 
cou¡
=
pö
; count<25; count++)

70 
	`gpioSëDúe˘i⁄
(
GPIO1
, 
cou¡
, 
OUTPUT
);

72 
	`gpioSëDúe˘i⁄
(
GPIO1
, 28, 
INPUT
);

74 
åue
){

75 
›
) {

76 
SEQ1
:

77 
	`ÀdON
(
GPIO1
, 
pö
);

78 
	`dñay
();

79 
	`ÀdOFF
(
GPIO1
, 
pö
);

80 
	`dñay
();

81 if(
	`gpioGëPöVÆue
(
GPIO1
, 28))

82 
›
=
SEQ2
;

84 
SEQ2
:

85 
	`ÀdON
(
GPIO1
, 
pö
+1);

86 
	`dñay
();

87 
	`ÀdOFF
(
GPIO1
, 
pö
+1);

88 
	`dñay
();

89 if(
	`gpioGëPöVÆue
(
GPIO1
, 28))

90 
›
=
SEQ3
;

92 
SEQ3
:

93 
	`ÀdON
(
GPIO1
, 
pö
+2);

94 
	`dñay
();

95 
	`ÀdOFF
(
GPIO1
, 
pö
+2);

96 
	`dñay
();

97 if(
	`gpioGëPöVÆue
(
GPIO1
, 28))

98 
›
=
SEQ4
;

100 
SEQ4
:

101 
	`ÀdON
(
GPIO1
, 
pö
+3);

102 
	`dñay
();

103 
	`ÀdOFF
(
GPIO1
, 
pö
+3);

104 
	`dñay
();

105 if(
	`gpioGëPöVÆue
(
GPIO1
, 28))

106 
›
=
SEQ5
;

108 
SEQ5
:

109 
cou¡
=
pö
; count<25; count++)

110 
	`ÀdON
(
GPIO1
, 
cou¡
);

111 
	`dñay
();

112 
	`dñay
();

113 
cou¡
=
pö
; count<25; count++)

114 
	`ÀdOFF
(
GPIO1
, 
cou¡
);

115 
	`dñay
();

116 
	`dñay
();

117 if(
	`gpioGëPöVÆue
(
GPIO1
, 28))

118 
›
=
SEQ1
;

126 
	}
}

134 
	$ÀdON
(
gpioP‹t
 
p‹t
, 
ucPöNumbî
 
pö
){

135 
	`gpioSëPöVÆue
(
p‹t
, 
pö
, 
HIGH
);

136 
	}
}

144 
	$ÀdOFF
(
gpioP‹t
 
p‹t
, 
ucPöNumbî
 
pö
 ){

145 
	`gpioSëPöVÆue
(
p‹t
, 
pö
, 
LOW
);

146 
	}
}

153 
	$dñay
(){

154 vﬁ©ûê
ø
;

155 
ø
 = 0;Ñ®< 
TIME
;Ña ++);

156 
	}
}

	@src/pad.c

19 
	~"∑d.h
"

20 
	~"c⁄åﬁ_moduÀ.h
"

28 
	$∑dSëMode
(
CONTROL_MODULE
 
moduÀ
, 
pömode_t
 
mode
){

29 if((
moduÀ
 <
CM_c⁄f_usb1_drvvbus
 ) && (moduÀ >
CM_c⁄f_gpmc_ad0
)){

30 
ãmp
 = 
	`cmGëCålModuÀ
(
moduÀ
);

31 
ãmp
 &= ~(0b111);

32 
ãmp
 |
mode
;

33 
	`cmSëCålModuÀ
(
moduÀ
, 
ãmp
);

37 
	}
}

45 
pömode_t
 
	$∑dGëMode
(
CONTROL_MODULE
 
moduÀ
){

46 if((
moduÀ
 <
CM_c⁄f_usb1_drvvbus
 ) && (moduÀ >
CM_c⁄f_gpmc_ad0
)){

47 
ãmp
 = 
	`cmGëCålModuÀ
(
moduÀ
);

49  ((
pömode_t
Ë
ãmp
);

54 
	}
}

	@
1
.
1
/usr/include
11
165
inc/clock_module.h
inc/control_module.h
inc/gpio.h
inc/hw_types.h
inc/pad.h
inc/soc_AM335x.h
src/clock_module.c
src/control_module.c
src/gpio.c
src/main.c
src/pad.c
